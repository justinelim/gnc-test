Resources:

  gncS3Bucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub "ac${AWS::AccountId}-gnc-test"
      VersioningConfiguration:
        Status: Enabled
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256

  defaultRepository:
    Type: AWS::SageMaker::CodeRepository
    Properties:
      CodeRepositoryName: gnc-test
      GitConfig:
        RepositoryUrl: https://github.com/justinelim/gnc-test

  BasicNotebookInstanceLifecycleConfig:
    Type: "AWS::SageMaker::NotebookInstanceLifecycleConfig"
    Properties:
      NotebookInstanceLifecycleConfigName: stopidle30min
      OnStart:
        - Content:
            Fn::Base64: !Join
              - ''
              - - |
                  #!/bin/bash

                  set -e
                - !Sub |

                  echo "export GNC_S3_BUCKET=${gncS3Bucket}" > /etc/profile.d/gnc-test-environment.sh
                - |
                  # OVERVIEW
                  # This script stops a SageMaker notebook once it's idle for more than 1 hour (default time)
                  # You can change the idle time for stop using the environment variable below.
                  # If you want the notebook the stop only if no browsers are open, remove the --ignore-connections flag
                  #
                  # Note that this script will fail if either condition is not met
                  #   1. Ensure the Notebook Instance has internet connectivity to fetch the example config
                  #   2. Ensure the Notebook Instance execution role permissions to SageMaker:StopNotebookInstance to stop the notebook
                  #       and SageMaker:DescribeNotebookInstance to describe the notebook.
                  #

                  # PARAMETERS
                  IDLE_TIME=1800

                  echo "Fetching the autostop script"
                  wget https://raw.githubusercontent.com/aws-samples/amazon-sagemaker-notebook-instance-lifecycle-config-samples/master/scripts/auto-stop-idle/autostop.py

                  echo "Starting the SageMaker autostop script in cron"

                  (crontab -l 2>/dev/null; echo "*/5 * * * * /usr/bin/python $PWD/autostop.py --time $IDLE_TIME --ignore-connections") | crontab -

  ExecutionRole:
    Type: "AWS::IAM::Role"
    Properties:
      RoleName: "gnc-test-notebook-role"
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Principal:
              Service:
                - "sagemaker.amazonaws.com"
            Action:
              - "sts:AssumeRole"
      Path: "/"
      Policies:
        - PolicyName: "gnc-test-notebook-policy"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: "Allow"
                Action:
                  - "cloudwatch:PutMetricData"
                  - "logs:CreateLogStream"
                  - "logs:PutLogEvents"
                  - "logs:CreateLogGroup"
                  - "logs:DescribeLogStreams"
                Resource: "*"
              - Effect: "Allow"
                Action:
                  - "s3:GetObject"
                  - "s3:PutObject"
                  - "s3:ListBucket"
                Resource:
                  - !Sub "arn:aws:s3:::${gncS3Bucket}"
                  - !Sub "arn:aws:s3:::${gncS3Bucket}/*"

  s3ImportExportLogsKey:
    Type: AWS::KMS::Key
    Properties:
      Description: KMS CMK to use in Import and Export API to encrypt logs
      KeyPolicy:
        Version: "2012-10-17"
        Id: key-default-1
        Statement:
          - Sid: Enable IAM User Permissions
            Effect: Allow
            Principal:
              AWS:
                Fn::Join:
                  - ""
                  - - "arn:aws:iam::"
                    - Ref: AWS::AccountId
                    - :root
            Action: kms:*
            Resource: "*"

  gncNotebook:
    Type: AWS::SageMaker::NotebookInstance
    Properties:
      AdditionalCodeRepositories:
        - https://github.com/synthetichealth/synthea.git
      DefaultCodeRepository: !GetAtt defaultRepository.CodeRepositoryName
      DirectInternetAccess: Enabled
      InstanceType: ml.t3.medium
      NotebookInstanceName: gnc-test
      RoleArn: !GetAtt ExecutionRole.Arn
      VolumeSizeInGB: 5
      LifecycleConfigName: !GetAtt BasicNotebookInstanceLifecycleConfig.NotebookInstanceLifecycleConfigName

Outputs:
  S3DataBucket:
    Description: S3 bucket to store CSV data
    Value: !Ref gncS3Bucket
  SageMakerNotebook:
    Description: SageMaker notebook Instance
    Value: !Ref gncNotebook
  KMSImportExportLogsKey:
    Description: KMS CMK to use in Import and Export API to encrypt logs
    Value: !Ref s3ImportExportLogsKey